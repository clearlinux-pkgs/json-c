#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : json-c
Version  : 0.16
Release  : 21
URL      : https://s3.amazonaws.com/json-c_releases/releases/json-c-0.16.tar.gz
Source0  : https://s3.amazonaws.com/json-c_releases/releases/json-c-0.16.tar.gz
Summary  : A JSON implementation in C
Group    : Development/Tools
License  : MIT
Requires: json-c-lib = %{version}-%{release}
Requires: json-c-license = %{version}-%{release}
BuildRequires : buildreq-cmake
BuildRequires : doxygen
BuildRequires : gcc-dev32
BuildRequires : gcc-libgcc32
BuildRequires : gcc-libstdc++32
BuildRequires : glibc-dev32
BuildRequires : glibc-libc32
BuildRequires : pkg-config
BuildRequires : pkgconfig(32json-c)
BuildRequires : pkgconfig(json-c)

%description


%package dev
Summary: dev components for the json-c package.
Group: Development
Requires: json-c-lib = %{version}-%{release}
Provides: json-c-devel = %{version}-%{release}
Requires: json-c = %{version}-%{release}

%description dev
dev components for the json-c package.


%package dev32
Summary: dev32 components for the json-c package.
Group: Default
Requires: json-c-lib32 = %{version}-%{release}
Requires: json-c-dev = %{version}-%{release}

%description dev32
dev32 components for the json-c package.


%package lib
Summary: lib components for the json-c package.
Group: Libraries
Requires: json-c-license = %{version}-%{release}

%description lib
lib components for the json-c package.


%package lib32
Summary: lib32 components for the json-c package.
Group: Default
Requires: json-c-license = %{version}-%{release}

%description lib32
lib32 components for the json-c package.


%package license
Summary: license components for the json-c package.
Group: Default

%description license
license components for the json-c package.


%prep
%setup -q -n json-c-0.16
cd %{_builddir}/json-c-0.16

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1656127232
mkdir -p clr-build
pushd clr-build
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=auto -fstack-protector-strong -fzero-call-used-regs=used "
export FCFLAGS="$FFLAGS -O3 -ffat-lto-objects -flto=auto -fstack-protector-strong -fzero-call-used-regs=used "
export FFLAGS="$FFLAGS -O3 -ffat-lto-objects -flto=auto -fstack-protector-strong -fzero-call-used-regs=used "
export CXXFLAGS="$CXXFLAGS -O3 -ffat-lto-objects -flto=auto -fstack-protector-strong -fzero-call-used-regs=used "
%cmake ..
make  %{?_smp_mflags}
popd
mkdir -p clr-build-avx2
pushd clr-build-avx2
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -Wl,-z,x86-64-v3 -ffat-lto-objects -flto=auto -fstack-protector-strong -fzero-call-used-regs=used -march=x86-64-v3 -msse2avx -mtune=skylake "
export FCFLAGS="$FFLAGS -O3 -Wl,-z,x86-64-v3 -ffat-lto-objects -flto=auto -fstack-protector-strong -fzero-call-used-regs=used -march=x86-64-v3 -msse2avx -mtune=skylake "
export FFLAGS="$FFLAGS -O3 -Wl,-z,x86-64-v3 -ffat-lto-objects -flto=auto -fstack-protector-strong -fzero-call-used-regs=used -march=x86-64-v3 -msse2avx -mtune=skylake "
export CXXFLAGS="$CXXFLAGS -O3 -Wl,-z,x86-64-v3 -ffat-lto-objects -flto=auto -fstack-protector-strong -fzero-call-used-regs=used -march=x86-64-v3 -msse2avx -mtune=skylake "
export CFLAGS="$CFLAGS -march=x86-64-v3 -m64 -Wl,-z,x86-64-v3"
export CXXFLAGS="$CXXFLAGS -march=x86-64-v3 -m64 -Wl,-z,x86-64-v3"
export FFLAGS="$FFLAGS -march=x86-64-v3 -m64 -Wl,-z,x86-64-v3"
export FCFLAGS="$FCFLAGS -march=x86-64-v3 -m64 -Wl,-z,x86-64-v3"
%cmake ..
make  %{?_smp_mflags}
popd
mkdir -p clr-build32
pushd clr-build32
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=auto -fstack-protector-strong -fzero-call-used-regs=used "
export FCFLAGS="$FFLAGS -O3 -ffat-lto-objects -flto=auto -fstack-protector-strong -fzero-call-used-regs=used "
export FFLAGS="$FFLAGS -O3 -ffat-lto-objects -flto=auto -fstack-protector-strong -fzero-call-used-regs=used "
export CXXFLAGS="$CXXFLAGS -O3 -ffat-lto-objects -flto=auto -fstack-protector-strong -fzero-call-used-regs=used "
export PKG_CONFIG_PATH="/usr/lib32/pkgconfig:/usr/share/pkgconfig"
export ASFLAGS="${ASFLAGS}${ASFLAGS:+ }--32"
export CFLAGS="${CFLAGS}${CFLAGS:+ }-m32 -mstackrealign"
export CXXFLAGS="${CXXFLAGS}${CXXFLAGS:+ }-m32 -mstackrealign"
export LDFLAGS="${LDFLAGS}${LDFLAGS:+ }-m32 -mstackrealign"
%cmake -DLIB_INSTALL_DIR:PATH=/usr/lib32 -DCMAKE_INSTALL_LIBDIR=/usr/lib32 -DLIB_SUFFIX=32 ..
make  %{?_smp_mflags}
unset PKG_CONFIG_PATH
popd

%install
export SOURCE_DATE_EPOCH=1656127232
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/json-c
cp %{_builddir}/json-c-0.16/COPYING %{buildroot}/usr/share/package-licenses/json-c/0cd23537e3c32497c7b87157b36f9d2eb5fca64b
pushd clr-build32
%make_install32
if [ -d  %{buildroot}/usr/lib32/pkgconfig ]
then
pushd %{buildroot}/usr/lib32/pkgconfig
for i in *.pc ; do ln -s $i 32$i ; done
popd
fi
if [ -d %{buildroot}/usr/share/pkgconfig ]
then
pushd %{buildroot}/usr/share/pkgconfig
for i in *.pc ; do ln -s $i 32$i ; done
popd
fi
popd
pushd clr-build-avx2
%make_install_v3  || :
popd
pushd clr-build
%make_install
popd
/usr/bin/elf-move.py avx2 %{buildroot}-v3 %{buildroot} %{buildroot}/usr/share/clear/filemap/filemap-%{name}

%files
%defattr(-,root,root,-)

%files dev
%defattr(-,root,root,-)
/usr/include/json-c/arraylist.h
/usr/include/json-c/debug.h
/usr/include/json-c/json.h
/usr/include/json-c/json_c_version.h
/usr/include/json-c/json_config.h
/usr/include/json-c/json_inttypes.h
/usr/include/json-c/json_object.h
/usr/include/json-c/json_object_iterator.h
/usr/include/json-c/json_pointer.h
/usr/include/json-c/json_tokener.h
/usr/include/json-c/json_types.h
/usr/include/json-c/json_util.h
/usr/include/json-c/json_visit.h
/usr/include/json-c/linkhash.h
/usr/include/json-c/printbuf.h
/usr/lib64/cmake/json-c/json-c-config.cmake
/usr/lib64/cmake/json-c/json-c-targets-relwithdebinfo.cmake
/usr/lib64/cmake/json-c/json-c-targets.cmake
/usr/lib64/libjson-c.so
/usr/lib64/pkgconfig/json-c.pc

%files dev32
%defattr(-,root,root,-)
/usr/lib32/cmake/json-c/json-c-config.cmake
/usr/lib32/cmake/json-c/json-c-targets-relwithdebinfo.cmake
/usr/lib32/cmake/json-c/json-c-targets.cmake
/usr/lib32/libjson-c.so
/usr/lib32/pkgconfig/32json-c.pc
/usr/lib32/pkgconfig/json-c.pc

%files lib
%defattr(-,root,root,-)
/usr/lib64/glibc-hwcaps/x86-64-v3/libjson-c.so
/usr/lib64/glibc-hwcaps/x86-64-v3/libjson-c.so.5
/usr/lib64/glibc-hwcaps/x86-64-v3/libjson-c.so.5.2.0
/usr/lib64/libjson-c.so.5
/usr/lib64/libjson-c.so.5.2.0

%files lib32
%defattr(-,root,root,-)
/usr/lib32/libjson-c.so.5
/usr/lib32/libjson-c.so.5.2.0

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/json-c/0cd23537e3c32497c7b87157b36f9d2eb5fca64b
